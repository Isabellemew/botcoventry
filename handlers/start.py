from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, CallbackQueryHandler
from teachers_info import teachers

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è—Ö", callback_data="show_teachers")],
        [InlineKeyboardButton("Event Announcements", callback_data="show_events")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî CoventryBot üí¨",
        reply_markup=reply_markup
    )

async def show_teachers_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = []
    for idx, t in enumerate(teachers):
        keyboard.append([InlineKeyboardButton(f"{t['title']} {t['name']}", callback_data=f"teacher_{idx}")])
    keyboard.append([InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main")])
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.callback_query.answer()
    await update.callback_query.edit_message_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è:", reply_markup=reply_markup
    )

async def teacher_info_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    idx = int(query.data.split('_')[1])
    t = teachers[idx]
    info = f"{t['title']} {t['name']}\n–°—Ç—Ä–∞–Ω–∞: {t['country']}\n–†–æ–ª—å: {t.get('role', '‚Äî')}\n–û–ø—ã—Ç: {t.get('experience', '‚Äî')}"
    keyboard = [[InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="show_teachers")]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await query.answer()
    await query.edit_message_text(info, reply_markup=reply_markup)

async def show_events_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [[InlineKeyboardButton("‚¨ÖÔ∏è Back", callback_data="back_to_main")]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.callback_query.answer()
    await update.callback_query.edit_message_text(
        "No upcoming events announced yet.", reply_markup=reply_markup
    )
